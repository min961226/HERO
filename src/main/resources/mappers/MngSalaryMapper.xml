<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nextLevel.hero.mngSalary.model.dao.MngSalaryMapper">

	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MngSalaryDTO" id="annualSalaryResultMap">
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="salaryStepByRank" column="SALARY_STEP_BY_RANK"/>
		<result property="rank" column="RANK"/>
		<result property="salaryStep" column="SALARY_STEP"/>
		<result property="salStepAmount" column="AMOUNT"/>
		<result property="salaryStepUpdatedDate" column="START_DATE"/>
		<result property="changeStartDate" column="CHANGE_START_DATE"/>
	
		<association property="memberInfo" resultMap="memberInfoResult"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MemberInfoDTO" id="memberInfoResult">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="idNo" column="ID_NO"/>
		<result property="memberName" column="MEMBER_NAME"/>		
		<result property="hireDate" column="HIRE_DATE"/>		
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MemberMonthlyPayDTO" id="latestMonthlyResult">
		<result property="payCategory" column="MONTHLY_PAY_CATEGORY"/>
		<result property="monthlyStartDate" column="CHANGE_START_DATE"/>
		<result property="amount" column="AMOUNT"/>
		<result property="note" column="DESCRIPTION"/>
		<result property="deductionYn" column="DEDUCTION_YN"/>
		<result property="monthlyStopDate" column="STOP_DATE"/>
		<result property="salaryNo" column="SALARY_NO"/>
	
		<association property="memberInfo" resultMap="memberInfoResult"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MngDeductFourInsDTO" id="fourInsResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<id property="idNo" column="ID_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="divNo" column="DIV_NO"/>
		<result property="validateDate" column="START_DATE"/>
		<result property="healthYn" column="HEALTH"/>
		<result property="pensionYn" column="PENSION"/>
		<result property="unemployeeYn" column="UNEMPLOYEE"/>
		<result property="industryYn" column="INDUSTRY"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MemberInsFeeDTO" id="memberInsFeeResult">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="divNum" column="DIV_NO"/>
		<result property="hireDate" column="HIRE_DATE"/>
		<result property="healthCoverDate" column="HEALTH_INS_START_DATE"/>
		<result property="healthSal" column="HEALTH_INS_SALARY"/>
		<result property="healthInsFee" column="HEALTH_INSURANCE_FEE"/>
		<result property="longtermFee" column="LONG_TERM_CARE_FEE"/>
		<result property="pensionCoverDate" column="PENSION_INS_START_DATE"/>
		<result property="pensionSal" column="PENSION_INS_SALARY"/>
		<result property="pensionFee" column="PENSION_INSURANCE_FEE"/>
	</resultMap> 
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.FourInsRateDTO" id="insRateResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="divNo" column="DIV_NO"/>
		<result property="insRateStartDate" column="INSURANCE_RATE_START_DATE"/>
		<result property="workersPensionRate" column="WORKERS_PENSION_RATE"/>
		<result property="workersHealthRate" column="WORKERS_HEALTH_RATE"/>
		<result property="workersLongTermCareRate" column="WORKERS_LONG_TERM_CARE_RATE"/>
		<result property="workersUnempRate" column="WORKERS_UNEMP_RATE"/>
		<result property="under150EmpRate" column="UNDER150_EMP_INSURANCE"/>
		<result property="industryRate" column="INDUSTRIAL_INSURANCE_RATE"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MngAccountDTO" id="memberAccountResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="rank" column="RANK"/>
		<result property="bankCode" column="BANK_CODE"/>
		<result property="bankName" column="BANK_NAME"/>
		<result property="accountNo" column="ACCOUNT_NO"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MngBonusListDTO" id="bonusCategoryResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<id property="bonusNo" column="BONUS_NO"/>
		<result property="bonusName" column="BONUS_NAME"/>
		<result property="bonusAmount" column="BONUS_AMOUNT"/>
	</resultMap>
	
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.AppointmentDTO" id="appointmentResultMap">
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="date" column="PERSONAL_APPOINTMENT_DATE"/>
		<result property="appointment" column="PERSONAL_APPOINTMENT_CATEGORY"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.DetailPayDTO" id="payListResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<id property="divNo" column="SALARY_NO"/>
		<result property="idNo" column="ID_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="salaryName" column="SALARY_NAME"/>
		<result property="imputedDate" column="IMPUTED_YEAR_AND_MONTH"/>
		<result property="payDate" column="PAY_DATE"/>
		<result property="salaryAmount" column="SALARY_AMOUNT"/>
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="salOrBonus" column="SALARY_OR_BONUS"/>
		<result property="deductYn" column="DEDUCTION_YN"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.DetailPayDTO" id="deductListResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<id property="divNo" column="EMP_DEDUCT_NO"/>
		<result property="idNo" column="ID_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="salaryName" column="DEDUCTION_NAME"/>
		<result property="imputedDate" column="IMPUTED_YEAR_AND_MONTH"/>
		<result property="payDate" column="PAY_DATE"/>
		<result property="salaryAmount" column="DEDUCTIBLE_AMOUNT"/>
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="salOrBonus" column="SALARY_OR_BONUS"/>
		<result property="deductYn" column="DEDUCTION_YN"/>
		<result property="confirmYn" column="CONFIRM_YN"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.SalaryAndBonusDTO" id="monthlySalPayList">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="rank" column="RANK"/>
		<result property="salaryStep" column="SALARY_STEP"/>
		<result property="yearAndMonth" column="IMPUTED_YEAR_AND_MONTH"/>
		<result property="payDate" column="PAY_DATE"/>
		<result property="salaryAmount" column="SALARY_AMOUNT"/>
		<result property="deductAmount" column="DEDUCTIBLE_AMOUNT"/>
		<result property="transferAmount" column="TRANSFER_AMOUNT"/>
		<result property="category" column="SALARY_OR_BONUS"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MngDepositDTO" id="depositResultMap">
		<result property="companyNo" column="COMPANY_NO"/>	
		<result property="memberNo" column="MEMBER_NO"/>	
		<result property="memberName" column="MEMBER_NAME"/>	
		<result property="departmentName" column="DEPARTMENT_NAME"/>	
		<result property="yearAndMonth" column="IMPUTED_YEAR_AND_MONTH"/>	
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.salary.model.dto.MyAccountDTO" id="accountListResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<id property="bankCode" column="BANK_CODE"/>
		<result property="bankName" column="BANK_NAME"/>
		<result property="accountNo" column="ACCOUNT_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngSalary.model.dto.MonthlyListDTO" id="MonthlyListResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="salaryNo" column="SALARY_NO"/>
		<result property="salaryName" column="SALARY_NAME"/>
		<result property="regularyYn" column="REGULARLY_YN"/>
		<result property="payPeriod" column="PAY_PERIOD"/>
		<result property="salaryAmount" column="SALARY_AMOUNT"/>
		<result property="deductYn" column="DEDUCTION_YN"/>
		<result property="annualYn" column="ANNUAL_SALARY_YN"/>
		<result property="useYn" column="USE_STATUS"/>
		<result property="targetYn" column="TARGET"/>	
	</resultMap>
	
	<select id="listMngAnnualSalary" resultMap="annualSalaryResultMap" parameterType="com.nextLevel.hero.mngSalary.model.dto.MngSalaryDTO">
		SELECT
               A.COMPANY_NO
             , A.MEMBER_NO
             , A.KOREAN_NAME AS MEMBER_NAME
             , A.ID_NO
             , B.DEPARTMENT_NAME
             , D.RANK
             , D.SALARY_STEP
             , D.AMOUNT
             , C.START_DATE
          FROM TBL_EMPLOYEE A
          JOIN TBL_DEPARTMENT B ON (A.DEPARTMENT_NO = B.DEPARTMENT_NO)
          JOIN TBL_EMP_SALARY_STEP_UPDATE C ON(A.MEMBER_NO = C.MEMBER_NO)
          JOIN TBL_RANK_SALARY_STEP D ON (C.SALARY_STEP_BY_RANK = D.SALARY_STEP_BY_RANK)
         WHERE A.COMPANY_NO = #{ companyNo }
           AND C.SALARY_STEP_BY_RANK = D.SALARY_STEP_BY_RANK
           AND (A.MEMBER_NO, C.START_DATE) IN (SELECT 
                                                      A1.MEMBER_NO
                                                    , MAX(C1.START_DATE)AS START_DATE
                                                 FROM TBL_EMPLOYEE A1
                                                 JOIN TBL_EMP_SALARY_STEP_UPDATE C1 ON (A1.MEMBER_NO = C1.MEMBER_NO)
                                                <where>
                                                	<if test="searchDate != null and '' != searchDate">
                                                	   C1.START_DATE <![CDATA[<=]]> #{ searchDate }
                                                	</if>
                                                	<if test="(searchDate == null) or '' == searchDate">
                                           			   C1.START_DATE <![CDATA[<=]]> SYSDATE
                                                    </if>
                                                </where> 
                                                GROUP BY A1.MEMBER_NO)
         <if test = "searchCondition == 'searchDeptName'">
           AND B.DEPARTMENT_NAME LIKE '%' || #{ searchValue } || '%'
         </if>
         <if test = "searchCondition == 'searchMemberName'">
           AND A.KOREAN_NAME = #{ searchValue }
         </if>
         ORDER BY B.DEPARTMENT_NO  	
	</select>
	
	<select id="listMonthlyPay" parameterType="com.nextLevel.hero.mngSalary.model.dto.MngSalaryDTO" resultMap="latestMonthlyResult">
	    SELECT
               A.COMPANY_NO
             , A.MEMBER_NO
             , A.MONTHLY_PAY_CATEGORY
             , A.AMOUNT
             , A.CHANGE_START_DATE
             , A.DEDUCTION_YN
             , A.SALARY_NO 
             , A.STOP_DATE
          FROM TBL_EMP_MONTHLY_SALARY_LIST A
         WHERE A.COMPANY_NO = #{ companyNo }
	     <if test="(searchDate == null) or '' == searchDate">
                AND A.CHANGE_START_DATE <![CDATA[<=]]> SYSDATE
                AND A.USE_STATUS = 'Y'
         </if>
         <if test="(searchDate != null) and '' != searchDate">
                AND A.CHANGE_START_DATE <![CDATA[<=]]> #{ searchDate } 
         </if>
	</select>
	
	
	<select id="listMonthlyPay2" parameterType="com.nextLevel.hero.mngSalary.model.dto.MngSalaryDTO" resultMap="latestMonthlyResult">
	    SELECT
		       A.COMPANY_NO
             , A.MEMBER_NO
		     , A.MONTHLY_PAY_CATEGORY
		     , A.CHANGE_START_DATE
		     , A.STOP_DATE
	      FROM TBL_EMP_MONTHLY_SALARY_LIST A
	     WHERE A.COMPANY_NO = #{ companyNo }
         <if test="(searchDate != null) and '' != searchDate">
                AND A.CHANGE_START_DATE <![CDATA[<=]]> #{ searchDate }
                AND A.STOP_DATE IN (SELECT 
                                           A1.STOP_DATE
                                      FROM TBL_EMP_MONTHLY_SALARY_LIST A1
                                      WHERE A1.STOP_DATE <![CDATA[<=]]> #{ searchDate })
         </if>
         <if test="(searchDate == null) or '' == searchDate">
                AND A.CHANGE_START_DATE <![CDATA[<=]]> SYSDATE
                AND A.USE_STATUS = 'Y'
         </if>                                     
	</select>
	
	
	
	
	<select id="listMonthlySalary" parameterType="com.nextLevel.hero.mngSalary.model.dto.MngSalaryDTO" resultMap="latestMonthlyResult">
		SELECT
		       A.COMPANY_NO
		     , A.ID_NO  
		     , A.SALARY_NO
             , A.MONTHLY_PAY_CATEGORY
		     , A.AMOUNT
		     , A.DESCRIPTION
		     , A.CHANGE_START_DATE
		     , A.DEDUCTION_YN
		     , A.SALARY_NO 
		     , A.STOP_DATE
	      FROM TBL_EMP_MONTHLY_SALARY_LIST A
	     WHERE A.COMPANY_NO = #{ companyNo }
	       AND A.MEMBER_NO = #{ memberNo }
	    <if test="(searchDate != null) and '' != searchDate">
           AND A.CHANGE_START_DATE <![CDATA[<=]]> #{ searchDate } 
        </if>
        <if test="(searchDate == null) or '' == searchDate">
           AND A.CHANGE_START_DATE <![CDATA[<=]]> SYSDATE
           AND A.USE_STATUS = 'Y'
        </if>
	</select>
	
	<select id="selectMonthlyList" resultMap="MonthlyListResultMap">
		SELECT
		       A.COMPANY_NO
		     , A.SALARY_NO
		     , A.SALARY_NAME
		     , A.REGULARLY_YN
		     , A.PAY_PERIOD
		     , A.SALARY_AMOUNT
		     , A.DEDUCTION_YN
		     , A.ANNUAL_SALARY_YN
		  FROM TBL_SALARY_CRITERIA A    
		 WHERE A.COMPANY_NO = #{ companyNo }    
		   AND A.USE_STATUS = 'Y'
		   AND A.REGULARLY_YN = '매월'
	</select>
	
	<select id="selectIdNo" resultType="_int">
		SELECT
               A.ID_NO
          FROM TBL_EMPLOYEE A
         WHERE A.COMPANY_NO = #{ companyNo }
           AND A.MEMBER_NO = #{ updateMemNo }	
	</select>
	
	<update id="updatePayStop">
		UPDATE
		       TBL_EMP_MONTHLY_SALARY_LIST
		   SET USE_STATUS = 'N'
		     , STOP_DATE = #{ monthlyStopDate }
		 WHERE COMPANY_NO = #{ companyNo }
		   AND MEMBER_NO = #{ memberNo }
		   AND SALARY_NO = #{ salaryNo }	  
	</update>
	
	<insert id="insertNewMonthPay">
	    INSERT
		  INTO TBL_EMP_MONTHLY_SALARY_LIST
		VALUES
		(
		  #{ companyNo }
		, #{ payCategory }
		, SYSDATE
		, #{ amount }
		, #{ note }
		, #{ newStartDate }
		, #{ deductionYn }
		, #{ memberNo }
		, #{ salaryNo }
		, #{ idNo }
		, DEFAULT
		, NULL
		)	
	</insert>
	
	<select id="listMngFourInsuranceList" parameterType="_int" resultMap="fourInsResultMap">
		SELECT
		       A.COMPANY_NO
		     , A.MEMBER_NO
		     , A.KOREAN_NAME AS MEMBER_NAME
		     , A.ID_NO
		     , B.DEPARTMENT_NAME
		     , C.DIV_NO
		     , C.START_DATE
		     , C.HEALTH
		     , C.PENSION
		     , C.UNEMPLOYEE
		     , C.INDUSTRY
		  FROM TBL_EMPLOYEE A
		  JOIN TBL_DEPARTMENT B ON (A.DEPARTMENT_NO = B.DEPARTMENT_NO)
		  JOIN TBL_FOUR_INSURANCE_DEDUCT C ON (A.MEMBER_NO = C.MEMBER_NO)
		 WHERE A.COMPANY_NO = #{ companyNo }
		 ORDER BY B.DEPARTMENT_NO			
	</select>
	
	<update id="updateFourInsuranceList" parameterType="com.nextLevel.hero.mngSalary.model.dto.MngDeductFourInsDTO">
	    UPDATE TBL_FOUR_INSURANCE_DEDUCT
	       SET 
	           START_DATE = #{ validateDate }
	         , HEALTH = #{ healthYn }
	         , PENSION = #{ pensionYn }
	         , UNEMPLOYEE = #{ unemployeeYn }
	         , INDUSTRY = #{ industryYn }	         
	     WHERE COMPANY_NO = #{ companyNo }
	      AND  DIV_NO = #{ divNo }
	      AND  MEMBER_NO = #{ memberNo }
	      AND  ID_NO = #{ idNo }
	</update>
	
	<insert id="insertFourInsHistory" parameterType="com.nextLevel.hero.mngSalary.model.dto.MngDeductFourInsDTO">
	    INSERT
	      INTO TBL_FOUR_INS_HISTORY
	    VALUES
	    (
	      SEQ_FOUR_UPDATE_NO.NEXTVAL
	    , #{ memberNo }
	    , #{ validateDate }
	    , SYSDATE
	    , #{ healthYn }
	    , #{ pensionYn }
	    , #{ unemployeeYn }
	    , #{ industryYn }
	    , #{ companyNo }
	    , #{ divNo }
	    )
	</insert>
	
	<select id="listMngNationalHealthInsurancePension" resultMap="memberInsFeeResult">
		SELECT
               A.COMPANY_NO
             , A.MEMBER_NO
             , A.KOREAN_NAME AS MEMBER_NAME
             , A.HIRE_DATE
             , B.DIV_NO
             , B.HEALTH_INS_START_DATE
             , B.HEALTH_INS_SALARY
             , B.HEALTH_INSURANCE_FEE
             , B.LONG_TERM_CARE_FEE
             , B.PENSION_INS_START_DATE
             , B.PENSION_INS_SALARY
             , B.PENSION_INSURANCE_FEE
          FROM TBL_EMPLOYEE A
          JOIN TBL_PERSONAL_INSURANCE_FEE B ON (A.MEMBER_NO = B.MEMBER_NO)
          JOIN TBL_DEPARTMENT C ON (A.DEPARTMENT_NO = C.DEPARTMENT_NO)         
         WHERE A.COMPANY_NO = #{ companyNo }
           AND (A.MEMBER_NO, B.HEALTH_INS_START_DATE, B.PENSION_INS_START_DATE) IN (SELECT 
                                                                                            A1.MEMBER_NO
                                                                                          , MAX(B1.HEALTH_INS_START_DATE)AS HEALTH_INS_START_DATE
                                                                                          , MAX(B1.PENSION_INS_START_DATE)AS PENSION_INS_START_DATE
                                            
                                                                                                       FROM TBL_EMPLOYEE A1
                                                                                                       JOIN TBL_PERSONAL_INSURANCE_FEE B1 ON (A1.MEMBER_NO = B1.MEMBER_NO)
                                                                                                     <where>
                                                                                                         <if test="(searchDate != null) and '' != searchDate">  
                                                                                                             B1.HEALTH_INS_START_DATE <![CDATA[<=]]> #{ searchDate } 
                                                                                                         OR  B1.PENSION_INS_START_DATE <![CDATA[<=]]> #{ searchDate } 
                                                                                                         </if>
                                                                                                         <if test="(searchDate == null) or '' == searchDate">
                                                                                                             B1.HEALTH_INS_START_DATE <![CDATA[<=]]> SYSDATE 
                                                                                                         OR  B1.PENSION_INS_START_DATE <![CDATA[<=]]> SYSDATE 
                                                                                                         </if>
                                                                                                     </where>
                                                                                                       GROUP BY A1.MEMBER_NO)
         <if test = "searchCondition == 'searchDeptName'">
           AND C.DEPARTMENT_NAME LIKE '%' || #{ searchValue } || '%'
         </if>
         <if test = "searchCondition == 'searchMemberName'">
           AND A.KOREAN_NAME = #{ searchValue }
         </if>                                                                                              
	</select>
	
	<select id="selectNewMemberInsFee" resultMap="memberInsFeeResult">
	    SELECT
               A.COMPANY_NO
             , A.MEMBER_NO
             , A.KOREAN_NAME AS MEMBER_NAME
             , A.HIRE_DATE
             , B.DIV_NO
             , B.HEALTH_INS_START_DATE
             , B.HEALTH_INS_SALARY
             , B.HEALTH_INSURANCE_FEE
             , B.LONG_TERM_CARE_FEE
             , B.PENSION_INS_START_DATE
             , B.PENSION_INS_SALARY
             , B.PENSION_INSURANCE_FEE
          FROM TBL_EMPLOYEE A
          LEFT JOIN TBL_PERSONAL_INSURANCE_FEE B ON (A.MEMBER_NO = B.MEMBER_NO) 
          JOIN TBL_DEPARTMENT C ON (A.DEPARTMENT_NO = C.DEPARTMENT_NO)        
         WHERE A.COMPANY_NO = #{ companyNo }
           AND B.HEALTH_INS_SALARY IS NULL
           AND B.PENSION_INS_SALARY IS NULL
        <if test="(searchDate != null) and '' != searchDate">  
           AND A.HIRE_DATE <![CDATA[<=]]> #{ searchDate }
        </if> 
        <if test = "searchCondition == 'searchDeptName'">
           AND C.DEPARTMENT_NAME LIKE '%' || #{ searchValue } || '%'
        </if>
        <if test = "searchCondition == 'searchMemberName'">
           AND A.KOREAN_NAME = #{ searchValue }
        </if>  
         ORDER BY A.HIRE_DATE    
	</select>
	
	
	
	<select id="selectInsRate" parameterType="com.nextLevel.hero.mngSalary.model.dto.FourInsRateDTO" resultMap="insRateResultMap">
	    SELECT
	           A.COMPANY_NO
	         , A.DIV_NO 
	         , A.INSURANCE_RATE_START_DATE
	         , A.WORKERS_PENSION_RATE
	         , A.WORKERS_HEALTH_RATE
	         , A.WORKERS_LONG_TERM_CARE_RATE
	         , A.WORKERS_UNEMP_RATE
	         , A.UNDER150_EMP_INSURANCE
	         , A.INDUSTRIAL_INSURANCE_RATE
	      FROM TBL_INSURANCE_RATE A
	     WHERE A.COMPANY_NO = #{ companyNo }
	 	   AND A.INSURANCE_RATE_START_DATE IN (SELECT
	 	                                              MAX(A1.INSURANCE_RATE_START_DATE)
	 	                                         FROM TBL_INSURANCE_RATE A1
	 	                                        WHERE A1.COMPANY_NO = #{ companyNo }      
	 	                                        <if test="(searchDate != null) and '' != searchDate">  
	 	                                          AND A1.INSURANCE_RATE_START_DATE <![CDATA[<=]]> #{ searchDate }     
	 	                                              ) 
	 	                                        </if>
                                                <if test="(searchDate == null) or '' == searchDate">
                                                  AND A1.INSURANCE_RATE_START_DATE <![CDATA[<=]]> SYSDATE    
	 	                                              )   
	 	                                        </if>   
	</select>	
	
	<insert id="updateMonthlyInsurance" parameterType="com.nextLevel.hero.mngSalary.model.dto.MemberInsFeeDTO">
		INSERT
		  INTO TBL_PERSONAL_INSURANCE_FEE
	    VALUES
	    (
	      #{ companyNo }
	    , #{ divNum }  
	    , #{ memberNo }
	    , #{ healthCoverDate }
	    , #{ healthSal }
	    , #{ healthInsFee }
	    , #{ longtermFee }
	    , #{ pensionCoverDate }
	    , #{ pensionSal }
	    , #{ pensionFee }
	    )
	</insert>
	
	
	
	<select id="listmngPayrollAccount" resultMap="memberAccountResultMap">
		SELECT
	            A.COMPANY_NO
	          , A.MEMBER_NO
	          , A.KOREAN_NAME AS MEMBER_NAME
	          , B.DEPARTMENT_NAME
	          , F.RANK
	          , G.ACCOUNT_NO
	          , H.BANK_NAME
	       FROM TBL_EMPLOYEE A
	       LEFT JOIN TBL_DEPARTMENT B ON (A.DEPARTMENT_NO = B.DEPARTMENT_NO)
	       LEFT JOIN TBL_EMP_SALARY_STEP C ON (A.MEMBER_NO = C.MEMBER_NO)
	       LEFT JOIN TBL_RANK_SALARY_STEP F ON (C.SALARY_STEP_BY_RANK = F.SALARY_STEP_BY_RANK)
	       FULL JOIN TBL_EMP_ACCOUNT G ON (A.MEMBER_NO = G.MEMBER_NO)
	       LEFT JOIN TBL_BANK H ON (G.BANK_CODE = H.BANK_CODE)
	      WHERE C.SALARY_STEP_BY_RANK = F.SALARY_STEP_BY_RANK
		    AND (A.MEMBER_NO, G.ENROLL_DATE) IN (SELECT 
		                                                G1.MEMBER_NO
		                                              , MAX(G1.ENROLL_DATE) 
		                                           FROM TBL_EMP_ACCOUNT_UPDATE G1 
		                                           <where>
                                                       <if test="(searchDate != null) and '' != searchDate">  
                                                         G1.ENROLL_DATE <![CDATA[<=]]> #{ searchDate }  
                                                       </if>
                                                       <if test="(searchDate == null) or '' == searchDate">
                                                         G1.ENROLL_DATE <![CDATA[<=]]> SYSDATE
                                                       </if>
                                                    </where>		                                          
		                                          GROUP BY G1.MEMBER_NO)
		     OR G.ACCOUNT_NO IS NULL                                     
		  GROUP BY A.COMPANY_NO
	          , A.MEMBER_NO
	          , A.KOREAN_NAME
	          , B.DEPARTMENT_NAME
	          , F.RANK
	          , G.ACCOUNT_NO
	          , H.BANK_NAME
         HAVING A.COMPANY_NO = #{ companyNo }
         <if test = "searchCondition == 'deptName'">
           AND B.DEPARTMENT_NAME LIKE '%' || #{ searchValue } || '%'
         </if>
         <if test = "searchCondition == 'memberName'">
           AND A.KOREAN_NAME = #{ searchValue }
         </if>                                                
	</select>
	
	<select id="selectBonusCategory" resultMap="bonusCategoryResultMap" parameterType="_int">
		SELECT
		       A.COMPANY_NO
		     , A.BONUS_NO
		     , A.BONUS_NAME
		     , A.BONUS_AMOUNT
		  FROM TBL_BONUS A
		 WHERE A.COMPANY_NO = #{ companyNo }
	</select>
	
	<select id="checkCreate" resultType="_int">
	   SELECT
	          COUNT(A.PAY_DATE)
	     FROM TBL_SALARY_AND_BONUS_LIST A
	    WHERE A.COMPANY_NO = #{ companyNo }
	      AND A.SALARY_OR_BONUS = #{ category }
	      AND A.PAY_DATE = #{ searchPayDate }
	</select>
	
	<select id="selectAppointment" resultMap="appointmentResultMap">
		SELECT
		       A.MEMBER_NO
		     , A.PERSONAL_APPOINTMENT_DATE
		     , A.PERSONAL_APPOINTMENT_CATEGORY  
	      FROM TBL_APPOINTMENT A
	     WHERE A.COMPANY_NO = #{ companyNo }
	       AND A.MEMBER_NO = #{ memberNo }
	       AND A.PERSONAL_APPOINTMENT_DATE <![CDATA[<]]> #{ searchDate }	       
	</select>
	
	<insert id="insertDetailPay" parameterType="com.nextLevel.hero.mngSalary.model.dto.DetailPayDTO">
		INSERT
		  INTO TBL_DETAIL_PAY
		VALUES
		(
		  #{ companyNo }
		, #{ memberNo }
		, #{ salaryName }
		, #{ imputedDate }
		, #{ payDate }
		, #{ salaryAmount }
		, #{ departmentName }
		, #{ memberName }
		, #{ salOrBonus }
		, #{ idNo }
		, SEQ_DETAIL_PAY_NO.NEXTVAL 
		) 
	</insert>
	
	<select id="selectPayList" resultMap="payListResultMap">
		SELECT
		       A.COMPANY_NO
		     , A.MEMBER_NO
		     , A.SALARY_NAME
		     , A.MEMBER_NAME
		     , A.SALARY_AMOUNT
		     , B.DEDUCTION_YN
		  FROM TBL_DETAIL_PAY A
		  LEFT JOIN TBL_EMP_MONTHLY_SALARY_LIST B ON (A.SALARY_NAME = B.MONTHLY_PAY_CATEGORY)
		 WHERE A.COMPANY_NO = #{ companyNo }		   
		   AND A.MEMBER_NO = #{ memberNo }
		   AND A.PAY_DATE = #{ searchPayDate }
		   AND A.SALARY_OR_BONUS = #{ category }
	</select>
	
	<select id="selectIncomeTax" resultType="integer" parameterType="_int">
		SELECT
		       NVL(A.INCOME_TAX, 0) AS INCOME_TAX
		  FROM TBL_INCOME_TAX A
		 WHERE A.COMPANY_NO = #{ companyNo }
		   AND A.MIN_SALARY <![CDATA[<=]]> #{ calcTaxSalary } 
           AND A.MAX_SALARY	<![CDATA[>]]> #{ calcTaxSalary } 	
	</select>
	
	<select id="selectOneFourInsDeduct" resultMap="fourInsResultMap">
		SELECT
		       A.COMPANY_NO
		     , A.MEMBER_NO
		     , A.KOREAN_NAME AS MEMBER_NAME
		     , A.ID_NO
		     , B.DEPARTMENT_NAME
		     , C.DIV_NO
		     , C.START_DATE
		     , C.HEALTH
		     , C.PENSION
		     , C.UNEMPLOYEE
		     , C.INDUSTRY
		  FROM TBL_EMPLOYEE A
		  JOIN TBL_DEPARTMENT B ON (A.DEPARTMENT_NO = B.DEPARTMENT_NO)
		  JOIN TBL_FOUR_INS_HISTORY C ON (A.MEMBER_NO = C.MEMBER_NO)
		 WHERE A.COMPANY_NO = #{ companyNo }
		   AND A.MEMBER_NO = #{ memberNo }
		   AND (A.MEMBER_NO, C.START_DATE) IN (SELECT
		                               C1.MEMBER_NO 
	 	                             , MAX(C1.START_DATE) AS START_DATE
	 	                          FROM TBL_FOUR_INS_HISTORY C1
	 	                         WHERE C1.COMPANY_NO = #{ companyNo }      
	 	                           AND C1.START_DATE <![CDATA[<]]> #{ searchStartDate } 
	 	                         GROUP BY C1.MEMBER_NO    
	 	                        )
	 	   AND (A.MEMBER_NO, C.UPDATE_NO) IN (SELECT
		                               C1.MEMBER_NO 
		                             , MAX(C1.UPDATE_NO) AS UPDATE_NO 
	 	                          FROM TBL_FOUR_INS_HISTORY C1
	 	                         WHERE C1.COMPANY_NO = #{ companyNo }      
	 	                           AND C1.START_DATE <![CDATA[<]]> #{ searchStartDate } 
	 	                         GROUP BY C1.MEMBER_NO    
	 	                        )                       
	</select>
	
	<select id="selectOneInsFee" resultMap="memberInsFeeResult">
		SELECT
               A.COMPANY_NO
             , A.MEMBER_NO
             , A.HEALTH_INS_START_DATE
             , A.HEALTH_INS_SALARY
             , A.HEALTH_INSURANCE_FEE
             , A.LONG_TERM_CARE_FEE
             , A.PENSION_INS_START_DATE
             , A.PENSION_INS_SALARY
             , A.PENSION_INSURANCE_FEE
          FROM TBL_PERSONAL_INSURANCE_FEE A         
         WHERE A.COMPANY_NO = #{ companyNo }
           AND A.MEMBER_NO = #{ memberNo }
           AND (A.MEMBER_NO, A.HEALTH_INS_START_DATE, A.PENSION_INS_START_DATE) IN (SELECT 
                                                                                            A1.MEMBER_NO
                                                                                          , MAX(A1.HEALTH_INS_START_DATE)AS HEALTH_INS_START_DATE
                                                                                          , MAX(A1.PENSION_INS_START_DATE)AS PENSION_INS_START_DATE                                      
                                                                                       FROM TBL_PERSONAL_INSURANCE_FEE A1 
                                                                                      WHERE A1.HEALTH_INS_START_DATE <![CDATA[<=]]> #{ searchDate } 
                                                                                        OR  A1.PENSION_INS_START_DATE <![CDATA[<=]]> #{ searchDate }
                                                                                      GROUP BY A1.MEMBER_NO   
                                                                                    )
	</select>
	
	<insert id="insertDetailDeduct" parameterType="com.nextLevel.hero.mngSalary.model.dto.DetailPayDTO">
		INSERT
		  INTO TBL_DETAIL_DEDUCTION
		VALUES
		(
		  #{ companyNo }
		, #{ memberNo }
		, #{ salaryName }
		, #{ imputedDate }
		, #{ payDate }
		, #{ salaryAmount }
		, #{ departmentName }
		, #{ memberName }
		, #{ salOrBonus }
		, #{ idNo }
		, SEQ_DETAIL_DEDUCTION_NO.NEXTVAL 
		) 
	</insert>
	
	<insert id="insertEmployerDeduct" parameterType="com.nextLevel.hero.mngSalary.model.dto.DetailPayDTO">
		INSERT
		  INTO TBL_EMPLOYER_DEDUCTION
		VALUES
		(
		  #{ companyNo }
		, #{ imputedDate }
		, #{ payDate }
		, #{ salaryAmount }
		, #{ memberNo }
		, #{ departmentName }
		, #{ memberName }
		, #{ salaryName }
		, #{ salOrBonus }
		, #{ idNo }
		, SEQ_EMPLOYER_DEDUCTION_NO.NEXTVAL 
		) 
	</insert>
	
	<insert id="insertSalaryList" parameterType="com.nextLevel.hero.mngSalary.model.dto.SalaryAndBonusDTO">
	    INSERT
		  INTO TBL_SALARY_AND_BONUS_LIST
		VALUES
		(
		  #{ companyNo }
		, SEQ_SALARY_BONUS_DIV_NO.NEXTVAL
		, #{ memberNo }
		, #{ rank }
		, #{ salaryStep }
		, #{ yearAndMonth }
		, #{ payDate }
		, #{ salaryAmount }
		, #{ deductAmount }
		, #{ transferAmount }
		, #{ category }
		, #{ idNo }
		)
	
	</insert>
	
	<select id="selectSalOrBonusList" resultMap="monthlySalPayList">
		SELECT
               A.COMPANY_NO
             , A.MEMBER_NO
             , A.RANK
             , A.SALARY_STEP
             , A.IMPUTED_YEAR_AND_MONTH
             , A.PAY_DATE
             , A.SALARY_AMOUNT
             , A.DEDUCTIBLE_AMOUNT
             , A.TRANSFER_AMOUNT
             , A.SALARY_OR_BONUS
             , B.MEMBER_NAME
             , B.DEPARTMENT_NAME
          FROM TBL_DETAIL_PAY B
          LEFT JOIN TBL_SALARY_AND_BONUS_LIST A ON (B.MEMBER_NO = A.MEMBER_NO)
         GROUP BY A.COMPANY_NO
             , A.MEMBER_NO
             , A.RANK
             , A.SALARY_STEP
             , A.IMPUTED_YEAR_AND_MONTH
             , A.PAY_DATE
             , A.SALARY_AMOUNT
             , A.DEDUCTIBLE_AMOUNT
             , A.TRANSFER_AMOUNT
             , A.SALARY_OR_BONUS
             , B.MEMBER_NAME
             , B.DEPARTMENT_NAME
        HAVING A.COMPANY_NO = #{ companyNo }
		   AND A.IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth }
		   AND A.SALARY_OR_BONUS = #{ category }
		   AND A.PAY_DATE = #{ searchPayDate }	
	</select>
	
	<select id="listPayDetail" resultMap="payListResultMap">
		SELECT 
		       A.SALARY_NAME
		     , A.SALARY_AMOUNT
		  FROM TBL_DETAIL_PAY A
		 WHERE A.COMPANY_NO = #{ companyNo }
		   AND A.MEMBER_NO = #{ memberNo }
		   AND A.PAY_DATE = #{ searchPayDate }
		   AND A.IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth }
		   AND A.SALARY_OR_BONUS = #{ category }  
	</select>
	
	<select id="listDeductDetail" resultMap="deductListResultMap">
		SELECT 
		       A.DEDUCTION_NAME
		     , A.DEDUCTIBLE_AMOUNT
		  FROM TBL_DETAIL_DEDUCTION A
		 WHERE A.COMPANY_NO = #{ companyNo }
		   AND A.MEMBER_NO = #{ memberNo }
		   AND A.PAY_DATE = #{ searchPayDate }
		   AND A.IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth }
		   AND A.SALARY_OR_BONUS = #{ category }  
	</select>
	
	<select id="checkConfirm" resultType="string">
		SELECT
		       A.CONFIRM_YN
		  FROM TBL_SALARY_AND_BONUS_LIST A
		 WHERE A.COMPANY_NO = #{ companyNo }
		   AND A.MEMBER_NO = #{ memberNo }
		   AND A.PAY_DATE = #{ searchPayDate }
		   AND A.IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth }
		   AND A.SALARY_OR_BONUS = #{ category } 
	</select>
	
	<select id="selectDepositList" resultMap="deductListResultMap">
		SELECT
		       A.COMPANY_NO
		     , A.MEMBER_NO
		     , A.MEMBER_NAME
		     , A.DEPARTMENT_NAME
		     , A.IMPUTED_YEAR_AND_MONTH
		     , A.DEDUCTION_NAME
		     , A.DEDUCTIBLE_AMOUNT 
		  FROM TBL_EMPLOYER_DEDUCTION A
		 WHERE A.COMPANY_NO = #{ companyNo }
		 <if test="(searchDate != null) and '' != searchDate">
		   AND A.PAY_DATE = #{ searchDate } 
	     </if>
		 <if test="(yearAndMonth != null) and '' != yearAndMonth">
		   AND A.IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth } 
	     </if>
	
	</select>
	
	<select id="selectMemberNo" resultMap="depositResultMap">
		SELECT
		       DISTINCT A.MEMBER_NO
		  FROM TBL_EMPLOYER_DEDUCTION A
		 WHERE A.COMPANY_NO = #{ companyNo }
		 <if test="(searchDate != null) and '' != searchDate">
		   AND A.PAY_DATE = #{ searchDate } 
	     </if>
		 <if test="(yearAndMonth != null) and '' != yearAndMonth">
		   AND A.IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth } 
	     </if>	
	</select>
	
	<update id="updatePersonalDetailDeduct">
		UPDATE
		       TBL_DETAIL_DEDUCTION
		   SET DEDUCTIBLE_AMOUNT = #{ salaryAmount }
		 WHERE COMPANY_NO = #{ companyNo }
		   AND MEMBER_NO = #{ memberNo }
		   AND PAY_DATE = #{ payDate }
		   AND IMPUTED_YEAR_AND_MONTH = #{ imputedDate }
		   AND SALARY_OR_BONUS = #{ salOrBonus }
		   AND DEDUCTION_NAME = #{ salaryName }       	
	</update>
	
	<update id="updateEmployerDeduct">
		UPDATE
		       TBL_EMPLOYER_DEDUCTION
		   SET DEDUCTIBLE_AMOUNT = #{ salaryAmount }
		 WHERE COMPANY_NO = #{ companyNo }
		   AND MEMBER_NO = #{ memberNo }
		   AND PAY_DATE = #{ payDate }
		   AND IMPUTED_YEAR_AND_MONTH = #{ imputedDate }
		   AND DIV_NO = #{ salOrBonus }
		   AND DEDUCTION_NAME = #{ salaryName }       	
	</update>
	
	<select id="selectOneSalOrBonus" resultMap="monthlySalPayList">
		SELECT
               A.COMPANY_NO
             , A.MEMBER_NO
             , A.IMPUTED_YEAR_AND_MONTH
             , A.PAY_DATE
             , A.SALARY_AMOUNT
             , A.DEDUCTIBLE_AMOUNT
             , A.TRANSFER_AMOUNT
             , A.SALARY_OR_BONUS
          FROM TBL_SALARY_AND_BONUS_LIST A
         WHERE A.COMPANY_NO = #{ companyNo }
           AND A.MEMBER_NO = #{ memberNo }
           AND A.PAY_DATE = #{ searchPayDate }
           AND A.IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth }
           AND A.SALARY_OR_BONUS = #{ category }  
    </select>
	
	<update id="updateSalAndBonus">
		UPDATE
		       TBL_SALARY_AND_BONUS_LIST
		   SET DEDUCTIBLE_AMOUNT = #{ deductAmount }
		     , TRANSFER_AMOUNT = #{ transferAmount }
		 WHERE COMPANY_NO = #{ companyNo }
		   AND MEMBER_NO = #{ memberNo }
		   AND PAY_DATE = #{ searchPayDate }
		   AND IMPUTED_YEAR_AND_MONTH = #{ yearAndMonth }
		   AND SALARY_OR_BONUS = #{ category }       	
	</update>
	
	<select id="selectPersonalAccount" resultMap="accountListResultMap">
	    SELECT
               A.COMPANY_NO
             , A.BANK_CODE
             , A.ACCOUNT_NO
             , A.MEMBER_NO
             , B.KOREAN_NAME AS MEMBER_NAME
             , A.ENROLL_DATE
             , C.BANK_NAME
          FROM TBL_EMP_ACCOUNT_UPDATE A
          JOIN TBL_EMPLOYEE B ON (A.MEMBER_NO = B.MEMBER_NO)
          JOIN TBL_BANK C ON (A.BANK_CODE = C.BANK_CODE)
         WHERE A.COMPANY_NO = #{ companyNo }
           AND A.MEMBER_NO = #{ memberNo }
         ORDER BY A.ENROLL_DATE DESC  
	</select>
	
</mapper>