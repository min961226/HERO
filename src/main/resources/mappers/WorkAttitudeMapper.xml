<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nextLevel.hero.workattitude.model.dao.WorkAttitudeMapper">

	<!--  직원이 연차 조회 -->
	<resultMap type="com.nextLevel.hero.workattitude.model.dto.EmployeeAnnualVacationDTO" id="listEmployeeAnnualVacationResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="createdMonthlyVacation" column="CREATED_MONTHLY_VACATION"/>
		<result property="totalVacation" column="TOTAL_VACATION"/>
		<result property="usedVacation" column="USED_VACATION"/>
		<result property="leaveVacation" column="LEAVE_VACATION"/>
		<result property="idNo" column="ID_NO"/>
		<result property="vacationCode" column="VACATION_CODE"/>
		
		<association property="mngMemberDepartment" resultMap="mngMemberDepartmentResult"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.mngBasicInformation.model.dto.MngMemberDepartmentDTO" id="mngMemberDepartmentResult">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="departmentNo" column="DEPARTMENT_NO"/>
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="koreanName" column="KOREAN_NAME"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="jobName" column="JOB_NAME"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.workattitude.model.dto.EmployeeVacationDTO" id="employeeVacationResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="resquestNo" column="REQUEST_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="vacationCategory" column="VACATION_CATEGORY"/>
		<result property="startDate" column="VACATION_START_DATE"/>
		<result property="endDate" column="VACATION_END_DATE"/>
		<result property="vacationContents" column="VACATION_CONTENTS"/>
		<result property="confirmedYn" column="CONFIRMED_YN"/>
		<result property="idNo" column="ID_NO"/>
	</resultMap>
	
	<!-- 직원이 연차 조회 -->
	<select id="listEmployeeAnnualVacation" resultMap="listEmployeeAnnualVacationResultMap">
		SELECT
		       A.*
		     , B.KOREAN_NAME
		     , C.DEPARTMENT_NAME  
		  FROM TBL_VACATION A 
		  JOIN TBL_EMPLOYEE B ON (A.MEMBER_NO = B.MEMBER_NO)
		  JOIN TBL_DEPARTMENT C ON (B.DEPARTMENT_NO = C.DEPARTMENT_NO)
		 WHERE A.COMPANY_NO = #{ companyNo }    
		   AND A.ID_NO = #{ idNo } 
	</select>
	<select id="listEmployeeVacation" resultMap="employeeVacationResultMap">
		SELECT
			   *
		  FROM TBL_REQUEST_VACATION
		 WHERE COMPANY_NO = #{ companyNo }
		   AND ID_NO = #{ no }
	</select>
	
	<insert id="insertVacation" parameterType="com.nextLevel.hero.workattitude.model.dto.EmployeeVacationDTO">
		INSERT
		  INTO TBL_REQUEST_VACATION
		VALUES
		(
		  #{ companyNo }
		, SEQ_REQUEST_VACATION.NEXTVAL
		, #{ memberNo }
		, #{ vacationCategory }
		, #{ startDate }
		, #{ endDate }
		, #{ vacationContents }
		, DEFAULT
		, #{ idNo }
		, #{ vacationDate }
		)
	</insert>
	
	


</mapper>








=======
	<resultMap type="com.nextLevel.hero.workattitude.model.dto.WorkAttitudeDTO" id="workResultMap">
		<id property="companyNo" column="COMPANY_NO"/>
		<result property="IdNo" column="ID_NO"/>
		<result property="koreanName" column="KOREAN_NAME"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<resultMap type="com.nextLevel.hero.workattitude.model.dto.WorkCommuteDTO" id="workCommuteMap">
		<id property="commuteNo" column="COMMUTE_NO"/>
		<result property="yearAndMonth" column="YEAR_AND_MONTH"/>
		<result property="workStartTime" column="WORK_START_TIME"/>
		<result property="workEndTime" column="WORK_END_TIME"/>
		<result property="todayStatus" column="TARDY_STATUS"/>
		<result property="earlyLeaveStatus" column="EARLY_LEAVE_STATUS"/>
		<result property="absentStatus" column="ABSENT_STATUS"/>
		<result property="holidayNo" column="HOLIDAY_NO"/>
	</resultMap>
	
	<select id="selectMemberCount" resultType="_int" parameterType="hashmap">
		 SELECT 
               COUNT(DISTINCT A.ID_NO)
          FROM TBL_EMPLOYEE A
         <if test="searchMap.searchCondition == 'searchDeptName'">
           JOIN TBL_DEPARTMENT B ON(A.DEPARTMENT_NO = B.DEPARTMENT_NO)
         </if>
         <where>
            <if test="searchMap.searchCondition == 'searchDeptName'">
            	B.DEPARTMENT_NAME LIKE '%' || #{ searchMap.searchValue } || '%'
            </if>
            <if test="searchMap.searchCondition == 'searchMemberName'">
            	A.KOREAN_NAME LIKE '%' || #{ searchMap.searchValue } || '%'
            </if>
            <if test="searchMap.searchCondition == 'searchMemberNo'">
            	A.MEMBER_NO LIKE '%' || #{ searchMap.searchValue } || '%'
            </if>
            AND A.COMPANY_NO = #{ companyNo }
            AND A.ID_NO = #{ idNo }
         </where>
	</select>
	
	<select id="selectMemberList" resultMap="workResultMap">
		SELECT
			   A.RNUM	
		     , A.COMPANY_NO
             , A.MEMBER_NO
             , A.ID_NO
             , A.KOREAN_NAME
          FROM (SELECT ROWNUM RNUM
          			 , B.COMPANY_NO
          			 , B.MEMBER_NO
          			 , B.ID_NO
          			 , B.KOREAN_NAME
          		  FROM (SELECT C.COMPANY_NO
          		  			 , C.MEMBER_NO
          		  			 , C.ID_NO
          		  			 , C.KOREAN_NAME
          		  		  FROM TBL_EMPLOYEE C
          		  		  <if test="searchMap.searchCondition == 'searchDeptName'">
          					JOIN TBL_DEPARTMENT D ON(C.DEPARTMENT_NO = D.DEPARTMENT_NO)
        				  </if>
        				  <where>
        				 	 <if test="searchMap.searchCondition == 'searchDeptName'">
        				 	 	D.DEPARTMENT_NAME LIKE '%' || #{ searchMap.searchValue } || '%'
        				  	 </if>
        				  	 <if test="searchMap.searchCondition == 'searchMemberName'">
            					C.KOREAN_NAME LIKE '%' || #{ searchMap.searchValue } || '%'
           					 </if>
          					  <if test="searchMap.searchCondition == 'searchMemberNo'">
            					C.MEMBER_NO LIKE '%' || #{ searchMap.searchValue } || '%'
          					  </if>
          					AND C.COMPANY_NO = #{ companyNo }
          					AND C.ID_NO = #{ idNo }
        				  </where>
        				   ORDER BY C.MEMBER_NO DESC
          		  		  ) B
          		  	<![CDATA[
                  WHERE ROWNUM <= #{ selectCriteria.endRow }
                  ]]>
          	   ) A 
         WHERE A.RNUM >= #{ selectCriteria.startRow }  
	</select>

	<select id="selectWorkAttitudeList" resultMap="workCommuteMap">
		SELECT
               A.COMMUTE_NO
             , A.YEAR_AND_MONTH
             , A.WORK_START_TIME
             , A.WORK_END_TIME
             , A.TARDY_STATUS
             , A.EARLY_LEAVE_STATUS
             , A.ABSENT_STATUS
             , A.HOLIDAY_NO
          FROM TBL_COMMUTE A
         WHERE A.COMPANY_NO = #{ memberInfo.companyNo }
           AND A.YEAR_AND_MONTH LIKE #{ formatedNow }
		   AND A.ID_NO = #{ memberInfo.IdNo }
		 ORDER BY 2 ASC
	</select>

</mapper>
